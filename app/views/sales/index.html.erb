<script src="http://maps.google.com/maps/api/js?key=AIzaSyDoQxkuNTRyYO6fgdTmZJGz7RWOs1dn-uA" type="text/javascript"></script>

<script>
var geocoder;
var map;
var markersArray = [];
var bounds;
var infowindow =  new google.maps.InfoWindow({
    content: ''
});
// grab the search url and turn it into google api address
var url = window.location.search;
url = url.replace("?search=", '');
// url2 and 3 prevent the alert box for locations not found from showing
var url2 = url.replace("+", ' ');
var url3 = url.replace("&item=", ' ');
// turn sales.json into usable array
var jsonarray;
$.getJSON('../sales.json', function(json) {
  jsonarray = json;
});
// for no value in search
if (url2 === "" || url2 === "&item=") {
//plot initial point using geocode instead of coordinates (works just fine)
  function initialize() {
      geocoder = new google.maps.Geocoder();
      bounds = new google.maps.LatLngBounds ();
      var myOptions = {
          zoom: 4,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          navigationControlOptions: {
              style: google.maps.NavigationControlStyle.SMALL
          }
      };
      map = new google.maps.Map(document.getElementById("map"), myOptions);

      geocoder.geocode( { 'address': "kansas" }, function(results, status) {
          if (status == google.maps.GeocoderStatus.OK) {
              map.setCenter(results[0].geometry.location);

              marker = new google.maps.Marker({
                  map: map,
                  position: results[0].geometry.location,
                  visible: false
              });

              bounds.extend(results[0].geometry.location);

              markersArray.push(marker);
          }
          else{
              // alert("Geocode was not successful for the following reason: " + status);
          }
      });

      plotMarkers();
  }
}
// for a value in search
else {function initialize() {

    geocoder = new google.maps.Geocoder();
    bounds = new google.maps.LatLngBounds ();

    var myOptions = {
        zoom: 10,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        navigationControlOptions: {
            style: google.maps.NavigationControlStyle.SMALL
        }
    };
    map = new google.maps.Map(document.getElementById("map"), myOptions);


    geocoder.geocode( { 'address': url3  }, function(results, status) {

        if (status == google.maps.GeocoderStatus.OK) {
            map.setCenter(results[0].geometry.location);

            marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location,
                visible: false
            });
            bounds.extend(results[0].geometry.location);

            markersArray.push(marker);
        }
        else{
            // alert("Geocode was not successful for the following reason: " + status);
        }
    });

    plotMarkers();
  }
}

// breaks down json array
function plotMarkers(){
    var i;
    for(i = 0; i < jsonarray.length; i++){
        codeAddresses(jsonarray[i].street, jsonarray[i].city, jsonarray[i].time, jsonarray[i].state, jsonarray[i].date, jsonarray[i].zip, jsonarray[i].description, jsonarray[i].id );

    }
}
// takes json values and puts them into geocode
function codeAddresses(street, city, time, state, date, zip, description, id){
  var test = new Date(date)
  var day = test.getDate();
  var month = test.getMonth();
  var year = test.getFullYear();
  console.log(test.getDate())
    geocoder.geocode( { 'address': street + city + state}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
            marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location
            });
// json values into info window
            google.maps.event.addListener(marker, 'mouseover', function() {
                infowindow.setContent('<strong>Address:</strong>' + ' ' + street + ', ' + city + ',' + ' ' + state + ',' + ' ' + zip + '<br />' + '<strong>Date:</strong>' + ' ' + month + '-' +  day + '-' + year + '<br />' + '<strong>Time:</strong>' + ' ' + time + ' ' + '<br />' +  '<strong>Description:</strong>' + ' ' + description + '<br />' + ' ' + '<a href="' + '../sales/' + id + '">Show</a>' );
                infowindow.open(map, this);
            });
            google.maps.event.addListener(map, 'click', function() {
              infowindow.close();
            });

            bounds.extend(results[0].geometry.location);

            markersArray.push(marker);
        }
        else{
            alert("Geocode was not successful for the following reason: " + status);
        }

        map.getBounds(bounds);
    });
}
google.maps.event.addDomListener(window, 'load', initialize);
// end of google map api and start of database display
</script>


<% if !params[:hidemap].present? %>
<!-- Map is placed inside the div -->
  <div id="map"></div>

<% end %>


<% if params[:hidemap].present? %>
<!-- Map is placed inside the div -->
  <div class="spacer">

  </div>

<% end %>

<div class="container-fluid">
  <div class="row">
    <div class="col col-sm-3">
      <p>Wrong city?<%= link_to ' Search again', root_path %></p>
    </div>
    <div class="nosale-message col col-sm-6">
      <% if @sales.length == 0 %>
          <h2>No sales in <%= @zip_or_city %></h2>
      <% end %>
    </div>
    <div class="col col-sm-3">
    </div>
  </div>
</div>

<div class="container map-page-content">


  <div class="search">
    <form method="get" remote="true" action="/sales">
      <input type ="hidden" name = "search" value = "<%= @zip_or_city %>">
      <span class="search-headers"><label for="textsearch">Search for Item in:  <%= @zip_or_city %></label></span><br>
      <input type="text" name="item" placeholder="Item" >
      <input type="hidden" name="hidemap" value="hidemap">
      <input id="item-search" type="submit" value="Search">
    </form>
  </div>






  <div id="itemstable-area">
    <%= render 'itemstable' %>
  </div>

</div>

