<p id="notice"><%= notice %></p>


  <script src="http://maps.google.com/maps/api/js?key=AIzaSyDoQxkuNTRyYO6fgdTmZJGz7RWOs1dn-uA" type="text/javascript"></script>





<!-- Search -->
<form method="get" action="/sales">
  <label for="search">Find Garage Sales:</label>
  <input type="text" name="search" placeholder="City or Zip code" >
  <input type="submit" value="Search">
</form>

<!-- map -->

<div id="map"></div>
<script>

var geocoder;
var map;
var markersArray = [];
var bounds;
var infowindow =  new google.maps.InfoWindow({
    content: ''
});
// grab the search url and turn it into google api address
var url = window.location.search;
url = url.replace("?search=", '');
var url2 = url.replace("+", ' ');
// turn sales.json into usable array
var jsonarray;
$.getJSON('../sales.json', function(json) {
  jsonarray = json;
});
// for no value in search
if (url2 === "") {
//plot initial point using geocode instead of coordinates (works just fine)
  function initialize() {
      geocoder = new google.maps.Geocoder();
      bounds = new google.maps.LatLngBounds ();
      var myOptions = {
          zoom: 4,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          navigationControlOptions: {
              style: google.maps.NavigationControlStyle.SMALL
          }
      };
      map = new google.maps.Map(document.getElementById("map"), myOptions);

      geocoder.geocode( { 'address': "kansas" }, function(results, status) {
          if (status == google.maps.GeocoderStatus.OK) {
              map.setCenter(results[0].geometry.location);

              marker = new google.maps.Marker({
                  map: map,
                  position: results[0].geometry.location,
                  visible: false
              });

              bounds.extend(results[0].geometry.location);

              markersArray.push(marker);
          }
          else{
              alert("Geocode was not successful for the following reason: " + status);
          }
      });

      plotMarkers();
  }
}
// for a value in search
else {function initialize() {
    geocoder = new google.maps.Geocoder();
    bounds = new google.maps.LatLngBounds ();

    var myOptions = {
        zoom: 10,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        navigationControlOptions: {
            style: google.maps.NavigationControlStyle.SMALL
        }
    };
    map = new google.maps.Map(document.getElementById("map"), myOptions);


    geocoder.geocode( { 'address': url2  }, function(results, status) {

        if (status == google.maps.GeocoderStatus.OK) {
            map.setCenter(results[0].geometry.location);

            marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location,
                visible: false
            });
            bounds.extend(results[0].geometry.location);

            markersArray.push(marker);
        }
        else{
            alert("Geocode was not successful for the following reason: " + status);
        }
    });

    plotMarkers();
  }
}

// breaks down json array
function plotMarkers(){
    var i;
    for(i = 0; i < jsonarray.length; i++){
        codeAddresses(jsonarray[i].street, jsonarray[i].city, jsonarray[i].time, jsonarray[i].state, jsonarray[i].date, jsonarray[i].zip, jsonarray[i].description, jsonarray[i].id );

    }
}
// takes json values and puts them into geocode
function codeAddresses(street, city, time, state, date, zip, description, id){
    geocoder.geocode( { 'address': street + city + state}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
            marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location
            });
// json values into info window
            google.maps.event.addListener(marker, 'mouseover', function() {
                infowindow.setContent('<strong>Address:</strong>' + ' ' + street + ', ' + city + ',' + ' ' + state + ',' + ' ' + zip + '<br />' + '<strong>Date:</strong>' + ' ' + date + '<br />' + '<strong>Time:</strong>' + ' ' + time + ' ' + '<br />' +  '<strong>Description:</strong>' + ' ' + description + '<br />' + ' ' + '<a href="' + '../sales/' + id + '">Show</a>' );
                infowindow.open(map, this);
            });

            bounds.extend(results[0].geometry.location);

            markersArray.push(marker);
        }
        else{
            alert("Geocode was not successful for the following reason: " + status);
        }

        map.getBounds(bounds);
    });
}
google.maps.event.addDomListener(window, 'load', initialize);
// end of google map api and start of database display
</script>
</html>

<div class="table-view">

<h1>Sales</h1>

<table>
  <thead>
    <tr>
      <th>Street</th>
      <th>City</th>
      <th>State</th>
      <th>Zip</th>
      <th>Date</th>
      <th>Time</th>
      <th>Description</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @sales.each do |sale| %>
      <tr>
        <td><%= sale.street %></td>
        <td><%= sale.city %></td>
        <td><%= sale.state %></td>
        <td><%= sale.zip %></td>
        <td><%= sale.date %></td>
        <td><%= sale.time %></td>
        <td><%= sale.description %></td>
        <td><%= link_to 'Show', sale %></td>
      <% if @ability.can? :manage, :all %>
        <td><%= link_to 'Edit', edit_sale_path(sale) %></td>
        <td><%= link_to 'Destroy', sale, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      <% end %>
      </tr>
    <% end %>
  </tbody>
</table>



<br>

<% if @ability.can? :manage, Sale %>
  <%= link_to 'New Sale', new_sale_path %>
<% end %>

</div>
